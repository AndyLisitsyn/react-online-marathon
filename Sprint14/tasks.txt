https://github.com/React-14-node-ajax/task1-node-team-andrii-lisitsyn

Implement an http server (you can use ExpressJS) that initiates asynchronous operations when a GET request is made:

Continuous output to the server console of the current UTC date and time at certain intervals.
Stopping the console time output after a while and completing the server response with the return to the user a current UTC date and time.
Acceptance criteria:
When you connect to the server, the output to the console of the current time begins at regular intervals
Stop output to the console after the specified time and return the current date and time to the user.
The interval and time interval must be specified when starting the server using environment variables:
$ node server.js -i [console output recurrence interval] -t [time after which the web client message will be displayed]

Make a video presentation with a colleague with a solution (explanation of the solution)
Example:

https://github.com/React-14-node-ajax/task2-ajax-ajax-andrii-lisitsyn

The tasks of the topic Ajax:


Task 1
Create Star Wars database application. Use swapi.dev for data and starwars-visualguide.com for images.

Application will show:

image with SW person

h3 tag with name

li elements with:

Gender
Birth Year
Eye color
Button "NEXT". It loads the next person.

Task 2
Do the same with "Planets" and "Starships". Their data cards will have at least 3 data fields.

Task 3
At the top of the page, add a Header component. When you click on the corresponding header menu, only the required component is rendered. People is render by default

###Requierements:

use axios library for ajax
take out work with ajax and data formatting into a separate class file and name it /src/services/sw-service.js
the root element App must be in the /src/components/App/ directory
using Router is not necessary in this task
You are free in styles. Make the app prettier than the gif 8-)