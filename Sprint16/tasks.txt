https://github.com/React-16-1/task1-unit-testing-a

Testing JS Applications (React Applications)

Application
The application is very simple which consist of only two components: App component, Info component and one service module named DataService
DataService module is used for gathering information from GitHub API using username
Run the application using $npm start
Open Web Browser and in address bar type URL like this http://localhost:3000 (will be done automatically after the previous command :-) )
Tasks
Please write unit tests to check functionality of all modules (components, service) with using Jest framework

 App component
 Info component
 DataService module
All testing modules should be placed at src/tests directory All test specifications should be real it means that code like this expect(2 + 2).toBe(4) isn't good :) Code coverage is calculating by Jest framework and should be at least 90%

A pieces of advice
The application is written using create-react-app tool with pre-configured jest testing framework
When you need to use test doubles (mocking) please create directory src/__mocks__ and put all mocking modules to this directory
To calculate coverage please use the following command $npm test -- --coverage
Mocking
As a continuation of previous part :), for example, during testing DataService module the 3rd pary library (axios) should be mocked!!
Have a nice coding games :)

I hope this little task will help you to understand some basics of unit testing and not only

https://github.com/React-16-2-testing-library/react-testing-library-team-mk2-andrii-lisitsyn

Task. React Testing Library

We have an application with next - 3 tabs.
On activation any of them only corresponding component is displayed.

Please, test the components of the application
1. App component
Write tests for App component in 'App.test.js'
The test should check

if image is displayed when the first tab is selected
if Calculation component is displayed when the second is selected
if ButtonGroup component is displayed when the third tab is selected
Also, test should check if components are not displayed if they do not correspond to the currenc active tab.
2. Calculations component
Write tests for Calculations component in 'Calculations.test.js'
The test should check if evaluation of the result is correct

3. ButtonGroup component
Write tests for ButtonGroup component in 'ButtonGroup.test.js'
The test should check if text alignment in the paragraph is correct, corresponding to selected option.

Note: there are components in the folder brokenComponents.
These components are similar to the original ones, but they are with mistakes.
These mistakes are described in component files.
You can use these broken components to check if your tests will find the mistakes. To do this, just replace the original components with the broken ones and run your tests.